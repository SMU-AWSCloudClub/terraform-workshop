name: "Terraform Destroy"

on:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  undeploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./section3/answer3 # temporarily pointing to answer3
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_BRIANTEST }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_BRIANTEST }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5

      - name: Terraform Init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME_BRIANTEST }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
          AWS_DYNAMODB_TABLE: ${{ secrets.AWS_DYNAMODB_TABLE_BRIANTEST }}
        run: |
          terraform init \
            -backend-config="bucket=${AWS_BUCKET_NAME}" \
            -backend-config="key=${AWS_BUCKET_KEY_NAME}" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${AWS_DYNAMODB_TABLE}"

      - name: Terraform Destroy
        run: TF_LOG=DEBUG terraform destroy -auto-approve
